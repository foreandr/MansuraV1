[2022-12-16 15:59:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 15:59:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:10:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:10:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:11:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:11:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:11:33][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:11:33][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:12:30][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:21][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:14:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:15:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:15:30][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:16:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:16:44][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:16:44][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:18:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:18:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:18:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:12][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:30][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:19:30][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:20:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:20:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:20:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:20:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:20:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:06][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:21:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:05][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:12][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:56][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:22:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:05][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:07][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:25][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:29][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:23:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:27][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:27][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:24:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:01][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:20][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:26][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:25:33][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:27:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:27:56][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:27:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:27:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:28:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:28:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:28:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:28:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:29:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:29:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:30:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:30:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:30:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:30:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:30:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:31:00][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:31:04][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:31:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 16:32:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-16 18:51:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = ''
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = ''
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND '' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND '' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
