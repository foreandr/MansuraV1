[2022-12-11 12:11:55][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:11:56][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'youtubebot' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:04][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:07][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
        AND ((SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1)                                                              
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:08][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:19][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:29][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 12:12:30][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'youtubebot'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'youtubebot'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'youtubebot' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'youtubebot' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 19:53:44][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'Admin' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 19:53:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 19:53:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 19:53:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'Admin' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:06][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
        AND ((SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1)                                                              
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:29][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:01:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:05:08][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '2'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:05:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:12][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:06:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:07:00][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
                 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC, (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-11 20:07:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'Admin'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'Admin'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'Admin' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'Admin' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY ((SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM LIKES file WHERE file.File_id = F.File_id ) + (SELECT COUNT(*) FROM FILE_FAVOURITE file WHERE file.File_id = F.File_id)) DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
