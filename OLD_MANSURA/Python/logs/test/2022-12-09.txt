[2022-12-09 08:37:40][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 08:37:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:07:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:07:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:07:25][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:07:26][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:10:07][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:10:08][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:10:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:10:19][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:13:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:13:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:20:40][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:20:40][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:47:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:47:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:50:35][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 09:50:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:42:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:42:37][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:54:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:54:37][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:54:40][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:54:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:54:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:01][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:04][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:55:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:56:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:56:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:12][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:27][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:58:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:59:08][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 12:59:08][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:38:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:38:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:55:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:55:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:55:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
               
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((2 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:55:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:58:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:58:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 49
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 49
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 49
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '49'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:26][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:37][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 13:59:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:00:01][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:00:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:06:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:06:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:06:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '35'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:06:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:29][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:29][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '35'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:07:53][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:33][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 35
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '35'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:34][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 2
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '2'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:35][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:08:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:17:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:17:09][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
               
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((2 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
                    
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((3 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:42:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:19][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
               
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:41][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:42][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
               AND U.username LIKE 'foreandr%'
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:56:55][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:19][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:27][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:27][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:32][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
        AND ((SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1)                                                              
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:33][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:35][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 14:57:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:36][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:38][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:44][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:08:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
         AND U.username = 'foreandr' 
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:09:16][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:19:50][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:19:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:20:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:20:25][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:20:43][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:20:44][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:21:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:21:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 14
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 14
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 14
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '14'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:15][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:22][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '15'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:22:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:24:21][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '15'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:24:22][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:25:53][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:25:53][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:25:56][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:25:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:39][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:40][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:45][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:26:53][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:28:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:28:51][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:28:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:28:58][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:29:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:29:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:29:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:29:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:30:11][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:30:12][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:33:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:33:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:34:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:34:10][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:00][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:01][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 36
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '36'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '247'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:25][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:46][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '247'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:38:47][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:39:02][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 247
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '247'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:39:03][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:39:06][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:39:07][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:00][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:01][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:06][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 15
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '15'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:06][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:24][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '248'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:25][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
        AND ((SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1)                                                              
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:28][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:48][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:49][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
               
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((2 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:52][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:54][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
                    
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((3 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:55][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
                         
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((4 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:57][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
                              
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((5 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:40:59][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:41:22][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
            
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Daily'
        ), 
        (  
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Monthly'
        ),
        (   
            SELECT COUNT(*) -- TOTAL VOTES FOR DATASET
            FROM FILE_VOTES file 
            WHERE file.File_id = 248
            AND Vote_Type = 'Yearly'
        )
    ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
        AND F.Post_foreign_id_source = '248'  
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:41:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:43:17][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:43:18][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:44:20][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:44:21][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:45:13][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:45:14][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:51:31][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
[2022-12-09 15:54:23][test][][]-
        SELECT
            F.File_id, 
            U.username, 
            (               
                SELECT balance 
                FROM USERS 
                WHERE username = 'foreandr'
             
            ),  
            F.File_PATH, 
            F.Date_Time, 
            F.Post_foreign_id_source,                    
            ( 
                SELECT COUNT(*) -- daily num votes LEFT 
                FROM FILE_VOTES file_vote 
                WHERE Vote_Type = 'Daily'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('day', now())::date
            ),
            ( 
                SELECT COUNT(*) -- monthly num votes LEFT
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Monthly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('month', now())::date
            ),
            (  
                SELECT COUNT(*) -- yearly num votes LEFT FOR X USER
                FROM FILE_VOTES file_vote
                WHERE Vote_Type = 'Yearly'
                AND Voter_Username = 'foreandr'
                AND Date_Time >= date_trunc('year', now())::date
            ),
            (   
                SELECT COUNT(*) -- DAILY VOTESFOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Daily'
            ),
            (   
                SELECT COUNT(*) -- MONTHLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Monthly'
            ),
            (   
                SELECT COUNT(*) -- YEARLY VOTES FOR ALL DATASETS!
                FROM FILE_VOTES file 
                WHERE file.File_id = F.File_id 
                AND Vote_Type = 'Yearly'
            ), 
            --PAYOUT info
            (SELECT Daily FROM PAYOUTS),
            (SELECT Monthly FROM PAYOUTS),
            (SELECT Yearly FROM PAYOUTS),
             
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0),
        (SELECT count(*) FROM PAYOUTS WHERE 1 = 0)
        ,
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
            ),
            (
                SELECT COUNT(*)
                FROM LIKES likes
                WHERE likes.File_id = F.File_id 
                AND 'foreandr' = likes.Liker_Username
            ),
            (
                SELECT COUNT(*)
                FROM DISLIKES dislikes
                WHERE dislikes.File_id = F.File_id 
                AND 'foreandr' = dislikes.Disliker_Username
            ),
            (
                SELECT COUNT(*)
                FROM FILES 
                WHERE Post_foreign_id_source = CAST (F.File_id AS  varchar) --bad mistake shouldnt have to cast but whatever
            ),
            (
                SELECT COUNT(*)
                FROM SUBSCRIPTIONS_MENSURA sub
                WHERE sub.username = U.username
            )

 
        FROM FILES F
        
        INNER JOIN USERS U
        on U.username = F.Uploader

        WHERE U.username = U.username -- DO THIS SO ALL OTHERC ALUSES CAN BE AND CLAUSES
          
                
            AND CASE 
            WHEN (SELECT COUNT(*) FROM TRIBUNAL WHERE TRIBUNAL.File_Id = F.File_id) = 1 
                THEN                   
                    CASE 
                    WHEN (((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id)) > 1 ) AND (SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) > 10 -- SWITCH TO TEN
                        THEN
                                ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) / ((SELECT COUNT(*) FROM DISLIKES dislikes WHERE dislikes.File_id = F.File_id) + (SELECT COUNT(*) FROM LIKES likes WHERE likes.File_id = F.File_id))) > .75                                                                                           
                        ELSE 1=1   
                    END                                                          
                ELSE 1 = 1 
            END
        
                                                                      
        ORDER BY (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Monthly') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Daily') + (SELECT COUNT(*) FROM FILE_VOTES file WHERE file.File_id = F.File_id AND Vote_Type = 'Yearly') DESC
        
        OFFSET ((1 - 1) * 30)
        LIMIT 30; 
    
,
